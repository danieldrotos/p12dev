//; PROC P2
//; SYMBOLS
//= 0000f000 callin
//= 0000f001 monitor
//= 0000f00e putchar
//= 0000f00f prints
//= 0000f011 pvhex
//= 0000f008 avail
//= 0000f00d read
//= 0000ff00 porta
//= 0000ff01 portb
//= 0000ff01 led
//= 0000ff10 sw
//= 0000ff20 btn
//= 0000ff51 pre
//= 0000ff50 clock
//= 0000ff52 ffcnt
//L 0000000a main_cycle
//L 0000000d no_press
//L 0000000f show_counter
//L 00000016 proc_input
//L 0000002c pi_no_space
//L 0000002e pi_w
//L 0000003d pi_no_w
//L 0000003f pi_a
//L 0000004e pi_no_a
//L 00000050 pi_s
//L 0000005f pi_no_s
//L 00000061 pi_d
//L 00000070 pi_no_d
//L 00000070 pi_end
//L 00000072 s_clrch
//L 0000007a s_up
//L 0000007e s_down
//L 00000082 s_left
//L 00000086 s_right
//L 0000008a drawit
//L 00000094 pressed
//L 000000a6 pressed_igaz
//L 000000a8 pressed_hamis
//L 000000a9 pressed_vege
//L 000000ae div
//L 000000b5 div_dok
//L 000000b9 div_cyc
//L 000000c4 div_cyc_next
//L 000000c6 div_ret
//L 000000c9 s_clrscr
//L 000000d1 last_btn
//L 000000d2 x
//L 000000d3 y
//L 000000d4 down
//L 000000d5 counter
//L 0000013a verem
//; CODE
01d2013a //C 00001 ldl0	sp,verem
0700ff20 //C 00002 ld	r0,btn
060000d1 //C 00003 st	r0,last_btn
010200c9 //C 00004 ldl0	r0,s_clrscr
0400f00f //C 00005 call	prints
01020001 //C 00006 ldl0	r0,1
060000d2 //C 00007 st	r0,x
060000d3 //C 00008 st	r0,y
0400008a //C 00009 call	drawit
01020002 //C 0000a ldl0	r0,2
04000094 //C 0000b call	pressed
3400f000 //C 0000c C call	callin		; BTN1 pressed: back to monitor
0400f008 //C 0000d call	avail		; check UART
34000016 //C 0000e C call	proc_input
070000d5 //C 0000f ld	r0,counter
01040001 //C 00010 inc	r0
060000d5 //C 00011 st	r0,counter
011203e8 //C 00012 ldl0	r1,1000
040000ae //C 00013 call	div
0620ff01 //C 00014 st	r2,led
01f2000a //C 00015 jmp	main_cycle
0ded0000 //C 00016 push	lr
0400f00d //C 00017 call	read
0710ff00 //C 00018 ld	r1,porta
02180000 //C 00019 shl	r1
02180000 //C 0001a shl	r1
02180000 //C 0001b shl	r1
02180000 //C 0001c shl	r1
02180000 //C 0001d shl	r1
02180000 //C 0001e shl	r1
02180000 //C 0001f shl	r1
02180000 //C 00020 shl	r1
001d0000 //C 00021 or	r1,r0
0610ff00 //C 00022 st	r1,porta
01080020 //C 00023 cmp	r0,32
21f2002c //C 00024 NE jmp	pi_no_space
070000d4 //C 00025 ld	r0,down
010e0001 //C 00026 xor	r0,1
060000d4 //C 00027 st	r0,down
01020082 //C 00028 ldl0	r0,s_left
0400f00f //C 00029 call	prints
0400008a //C 0002a call	drawit
01f20070 //C 0002b jmp	pi_end
01080077 //C 0002c cmp	r0,'w'
21f2003d //C 0002d NE jmp	pi_no_w
070000d3 //C 0002e ld	r0,y		; hatar?
01080001 //C 0002f cmp	r0,1		; y==1
11f20070 //C 00030 EQ jmp	pi_end
070000d4 //C 00031 ld	r0,down
020b0000 //C 00032 sz	r0
11020072 //C 00033 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00034 NZ ldl0	r0,s_left
0400f00f //C 00035 call	prints
070000d3 //C 00036 ld	r0,y		; y--
0104ffff //C 00037 dec	r0
060000d3 //C 00038 st	r0,y
0102007a //C 00039 ldl0	r0,s_up		; cursor UP
0400f00f //C 0003a call	prints
0400008a //C 0003b call	drawit
01f20070 //C 0003c jmp	pi_end
01080061 //C 0003d cmp	r0,'a'
21f2004e //C 0003e NE jmp	pi_no_a
070000d2 //C 0003f ld	r0,x		; hatar?
01080001 //C 00040 cmp	r0,1		; x==1
11f20070 //C 00041 EQ jmp	pi_end
070000d4 //C 00042 ld	r0,down
020b0000 //C 00043 sz	r0
11020072 //C 00044 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00045 NZ ldl0	r0,s_left
0400f00f //C 00046 call	prints
070000d2 //C 00047 ld	r0,x		; x--
0104ffff //C 00048 dec	r0
060000d2 //C 00049 st	r0,x
01020082 //C 0004a ldl0	r0,s_left	; cursor LEFT
0400f00f //C 0004b call	prints
0400008a //C 0004c call	drawit
01f20070 //C 0004d jmp	pi_end
01080073 //C 0004e cmp	r0,'s'
21f2005f //C 0004f NE jmp	pi_no_s
070000d3 //C 00050 ld	r0,y		; hatar?
01080018 //C 00051 cmp	r0,24		; y==24
11f20070 //C 00052 EQ jmp	pi_end
070000d4 //C 00053 ld	r0,down
020b0000 //C 00054 sz	r0
11020072 //C 00055 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00056 NZ ldl0	r0,s_left
0400f00f //C 00057 call	prints
070000d3 //C 00058 ld	r0,y		; y++
01040001 //C 00059 inc	r0
060000d3 //C 0005a st	r0,y
0102007e //C 0005b ldl0	r0,s_down	; cursor DOWN
0400f00f //C 0005c call	prints
0400008a //C 0005d call	drawit
01f20070 //C 0005e jmp	pi_end
01080064 //C 0005f cmp	r0,'d'
21f20070 //C 00060 NE jmp	pi_no_d
070000d2 //C 00061 ld	r0,x		; hatar?
0108004f //C 00062 cmp	r0,79		; x==79
11f20070 //C 00063 EQ jmp	pi_end
020b0000 //C 00054 sz	r0
11020072 //C 00055 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00056 NZ ldl0	r0,s_left
0400f00f //C 00057 call	prints
070000d3 //C 00058 ld	r0,y		; y++
01040001 //C 00059 inc	r0
060000d3 //C 0005a st	r0,y
0102007e //C 0005b ldl0	r0,s_down	; cursor DOWN
0400f00f //C 0005c call	prints
0400008a //C 0005d call	drawit
01f20070 //C 0005e jmp	pi_end
01080064 //C 0005f cmp	r0,'d'
21f20070 //C 00060 NE jmp	pi_no_d
070000d2 //C 00061 ld	r0,x		; hatar?
0108004f //C 00062 cmp	r0,79		; x==79
11f20070 //C 00063 EQ jmp	pi_end
020b0000 //C 00054 sz	r0
11020072 //C 00055 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00056 NZ ldl0	r0,s_left
0400f00f //C 00057 call	prints
070000d3 //C 00058 ld	r0,y		; y++
01040001 //C 00059 inc	r0
060000d3 //C 0005a st	r0,y
0102007e //C 0005b ldl0	r0,s_down	; cursor DOWN
0400f00f //C 0005c call	prints
0400008a //C 0005d call	drawit
01f20070 //C 0005e jmp	pi_end
01080064 //C 0005f cmp	r0,'d'
21f20070 //C 00060 NE jmp	pi_no_d
070000d2 //C 00061 ld	r0,x		; hatar?
0108004f //C 00062 cmp	r0,79		; x==79
11f20070 //C 00063 EQ jmp	pi_end
020b0000 //C 00054 sz	r0
11020072 //C 00055 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00056 NZ ldl0	r0,s_left
0400f00f //C 00057 call	prints
070000d3 //C 00058 ld	r0,y		; y++
01040001 //C 00059 inc	r0
060000d3 //C 0005a st	r0,y
0102007e //C 0005b ldl0	r0,s_down	; cursor DOWN
0400f00f //C 0005c call	prints
0400008a //C 0005d call	drawit
01f20070 //C 0005e jmp	pi_end
01080064 //C 0005f cmp	r0,'d'
21f20070 //C 00060 NE jmp	pi_no_d
070000d2 //C 00061 ld	r0,x		; hatar?
0108004f //C 00062 cmp	r0,79		; x==79
11f20070 //C 00063 EQ jmp	pi_end
020b0000 //C 00054 sz	r0
11020072 //C 00055 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00056 NZ ldl0	r0,s_left
0400f00f //C 00057 call	prints
070000d3 //C 00058 ld	r0,y		; y++
01040001 //C 00059 inc	r0
060000d3 //C 0005a st	r0,y
0102007e //C 0005b ldl0	r0,s_down	; cursor DOWN
0400f00f //C 0005c call	prints
0400008a //C 0005d call	drawit
01f20070 //C 0005e jmp	pi_end
01080064 //C 0005f cmp	r0,'d'
21f20070 //C 00060 NE jmp	pi_no_d
070000d2 //C 00061 ld	r0,x		; hatar?
0108004f //C 00062 cmp	r0,79		; x==79
11f20070 //C 00063 EQ jmp	pi_end
020b0000 //C 00054 sz	r0
11020072 //C 00055 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00056 NZ ldl0	r0,s_left
0400f00f //C 00057 call	prints
070000d3 //C 00058 ld	r0,y		; y++
01040001 //C 00059 inc	r0
060000d3 //C 0005a st	r0,y
0102007e //C 0005b ldl0	r0,s_down	; cursor DOWN
0400f00f //C 0005c call	prints
0400008a //C 0005d call	drawit
01f20070 //C 0005e jmp	pi_end
01080064 //C 0005f cmp	r0,'d'
21f20070 //C 00060 NE jmp	pi_no_d
070000d2 //C 00061 ld	r0,x		; hatar?
0108004f //C 00062 cmp	r0,79		; x==79
11f20070 //C 00063 EQ jmp	pi_end
020b0000 //C 00054 sz	r0
11020072 //C 00055 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00056 NZ ldl0	r0,s_left
0400f00f //C 00057 call	prints
070000d3 //C 00058 ld	r0,y		; y++
01040001 //C 00059 inc	r0
060000d3 //C 0005a st	r0,y
0102007e //C 0005b ldl0	r0,s_down	; cursor DOWN
0400f00f //C 0005c call	prints
0400008a //C 0005d call	drawit
01f20070 //C 0005e jmp	pi_end
01080064 //C 0005f cmp	r0,'d'
21f20070 //C 00060 NE jmp	pi_no_d
070000d2 //C 00061 ld	r0,x		; hatar?
0108004f //C 00062 cmp	r0,79		; x==79
11f20070 //C 00063 EQ jmp	pi_end
070000d4 //C 00064 ld	r0,down
020b0000 //C 00065 sz	r0
11020072 //C 00066 Z ldl0	r0,s_clrch	; clear *
21020082 //C 00067 NZ ldl0	r0,s_left
0400f00f //C 00068 call	prints
070000d2 //C 00069 ld	r0,x		; x++
01040001 //C 0006a inc	r0
060000d2 //C 0006b st	r0,x
01020086 //C 0006c ldl0	r0,s_right	; cursor RIGHT
0400f00f //C 0006d call	prints
0400008a //C 0006e call	drawit
01f20070 //C 0006f jmp	pi_end
0fed0000 //C 00070 pop	lr
00f00e00 //C 00071 ret
0000001b //C 00072 db	27
0000005b //C 00073 db	91
00000044 //C 00074 db	68
00000020 //C 00075 db	32
0000001b //C 00076 db	27
0000005b //C 00077 db	91
00000044 //C 00078 db	68
00000000 //C 00079 db
0000001b //C 0007a db	27
0000005b //C 0007b db	91
00000041 //C 0007c db	65
00000000 //C 0007d db
0000001b //C 0007e db	27
0000005b //C 0007f db	91
00000042 //C 00080 db	66
00000000 //C 00081 db
0000001b //C 00082 db	27
0000005b //C 00083 db	91
00000044 //C 00084 db	68
00000000 //C 00085 db
0000001b //C 00086 db	27
0000005b //C 00087 db	91
00000043 //C 00088 db	67
00000000 //C 00089 db
0ded0000 //C 0008a push	lr
0d0d0000 //C 0008b push	r0
070000d4 //C 0008c ld	r0,down
020b0000 //C 0008d sz	r0
1102006f //C 0008e Z ldl0	r0,'o'
2102002a //C 0008f NZ ldl0	r0,'*'
0400f00e //C 00090 call	putchar
0f0d0000 //C 00091 pop	r0
0fed0000 //C 00092 pop	lr
00f00e00 //C 00093 ret
0ded0000 //C 00094 push	lr
0d1d0000 //C 00095 push	r1
0d2d0000 //C 00096 push	r2
0d3d0000 //C 00097 push	r3
071000d1 //C 00098 ld	r1,last_btn
0720ff20 //C 00099 ld	r2,btn
001f0000 //C 0009a and	r1,r0
002f0000 //C 0009b and	r2,r0
00180200 //C 0009c cmp	r1,r2
11f200a8 //C 0009d EQ jmp	pressed_hamis
071000d1 //C 0009e ld	r1,last_btn
00300000 //C 0009f mov	r3,r0
02340000 //C 000a0 not	r3
001f0300 //C 000a1 and	r1,r3
001d0200 //C 000a2 or	r1,r2
061000d1 //C 000a3 st	r1,last_btn
022b0000 //C 000a4 sz	r2
11f200a8 //C 000a5 Z jmp	pressed_hamis
020c0000 //C 000a6 sec
01f200a9 //C 000a7 jmp	pressed_vege
020d0000 //C 000a8 clc
0f3d0000 //C 000a9 pop	r3
0f2d0000 //C 000aa pop	r2
0f1d0000 //C 000ab pop	r1
0fed0000 //C 000ac pop	lr
00f00e00 //C 000ad ret
0ded0000 //C 000ae push	lr
0d4d0000 //C 000af push	r4
021b0000 //C 000b0 sz	r1
21f200b5 //C 000b1 NZ jmp	div_dok
00200000 //C 000b2 mov	r2,r0		; div by zero
01320000 //C 000b3 mvzl	r3,0
01f200c6 //C 000b4 jmp	div_ret
01220000 //C 000b5 mvzl	r2,0		; Q= 0
01320000 //C 000b6 mvzl	r3,0		; R= 0
01418000 //C 000b7 mvh	r4,0x80000000	; m= 1<<31
01400000 //C 000b8 mvl	r4,0x80000000
024b0000 //C 000b9 sz	r4
11f200c6 //C 000ba Z jmp	div_ret
02380000 //C 000bb shl	r3		; r<<= 1
000c0400 //C 000bc test	r0,r4		; if (n&m)
213d0001 //C 000bd NZ or	r3,1		; r|= 1
00380100 //C 000be cmp	r3,r1		; if (r>=d)
41f200c4 //C 000bf LO jmp	div_cyc_next
00360100 //C 000c0 sub	r3,r1		;r-= d
002d0400 //C 000c1 or	r2,r4		;q|= m
01f200c4 //C 000c2 jmp	div_cyc_next
01f200b9 //C 000c3 jmp	div_cyc
02490000 //C 000c4 shr	r4		; m>>= 1
01f200b9 //C 000c5 jmp	div_cyc
0f4d0000 //C 000c6 pop	r4
0fed0000 //C 000c7 pop	lr
00f00e00 //C 000c8 ret
0000001b //C 000c9 db	27
0000005b //C 000ca db	91
00000032 //C 000cb db	50
0000004a //C 000cc db	74
0000001b //C 000cd db	27
0000005b //C 000ce db	91
00000048 //C 000cf db	72
41f200c4 //C 000bf LO jmp	div_cyc_next
00360100 //C 000c0 sub	r3,r1		;r-= d
002d0400 //C 000c1 or	r2,r4		;q|= m
01f200c4 //C 000c2 jmp	div_cyc_next
01f200b9 //C 000c3 jmp	div_cyc
02490000 //C 000c4 shr	r4		; m>>= 1
01f200b9 //C 000c5 jmp	div_cyc
0f4d0000 //C 000c6 pop	r4
00200000 //C 000b2 mov	r2,r0		; div by zero
01320000 //C 000b3 mvzl	r3,0
01f200c6 //C 000b4 jmp	div_ret
01220000 //C 000b5 mvzl	r2,0		; Q= 0
01320000 //C 000b6 mvzl	r3,0		; R= 0
01418000 //C 000b7 mvh	r4,0x80000000	; m= 1<<31
01400000 //C 000b8 mvl	r4,0x80000000
024b0000 //C 000b9 sz	r4
11f200c6 //C 000ba Z jmp	div_ret
02380000 //C 000bb shl	r3		; r<<= 1
000c0400 //C 000bc test	r0,r4		; if (n&m)
//E
